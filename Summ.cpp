// Summ.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <vector>
#include <string>

int main()
{
    setlocale(LC_ALL, "RU_ru");
    std::vector<int> invector{};
    // Что бы из циклов не выходить по breake вводим булевую find
    bool find = false;
    int number = 0;
    std::cout << "Программа поиска суммы двух чисел в массиве!\n";
    // Наполняем массив (вектор) данными
    while (number != 9999)
    {
        std::cout << "Введите значение для массиваб для окончания ввода введите 9999: ";
        std::cin >> number;
        if(number != 9999)
            invector.push_back(number);
    }
    // Ввод искомой суммы
    std::cout << "Введите искомую сумму: ";
    std::cin >> number;
    for (int i = 0; i < invector.size() && !find; ++i)
    {
        for (int j = i + 1; j < invector.size() && !find; ++j)
            if ((invector[i] + invector[j]) == number)
            {
                std::cout << "\nНашёл: " << invector[i] << " + " << invector[j] << " = " << number << "\n";
                find++;
            }
    }
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
